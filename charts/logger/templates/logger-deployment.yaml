apiVersion: apps/v1
kind: Deployment
metadata:
  name: drycc-logger
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: drycc-logger
  template:
    metadata:
      labels:
        app: drycc-logger
    spec:
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset.type "key" .Values.podAffinityPreset.key "values" .Values.podAffinityPreset.values ) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset.type "key" .Values.podAntiAffinityPreset.key "values" .Values.podAntiAffinityPreset.values ) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values ) | nindent 10 }}
      initContainers:
      - name: drycc-logger-init
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/python-dev:latest
        imagePullPolicy: {{.Values.imagePullPolicy}}
        args:
          - netcat
          - -v
          - -a
          - $(DRYCC_REDIS_ADDRS)
        env:
        - name: DRYCC_REDIS_ADDRS
          valueFrom:
            secretKeyRef:
              name: redis-creds
              key: addrs
      containers:
      - name: drycc-logger
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/logger:{{.Values.imageTag}}
        imagePullPolicy: {{.Values.imagePullPolicy}}
        env:
        - name: STORAGE_ADAPTER
          value: redis
        - name: DRYCC_REDIS_ADDRS
          valueFrom:
            secretKeyRef:
              name: redis-creds
              key: addrs
        - name: DRYCC_REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-creds
              key: password
        - name: DRYCC_LOGS_MAXIMUM_LINES
          value: "{{.Values.logsMaximumLines}}"
        - name: DRYCC_LOGS_MAXIMUM_TIMEOUT
          value: "{{.Values.logsMaximumTimeout}}"
        ports:
        - containerPort: 8088
          name: http
{{- if or (.Values.limitsCpu) (.Values.limitsMemory)}}
        resources:
          limits:
{{- if (.Values.limitsCpu) }}
            cpu: {{.Values.limitsCpu}}
{{- end}}
{{- if (.Values.limitsMemory) }}
            memory: {{.Values.limitsMemory}}
{{- end}}
{{- end}}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8088
          initialDelaySeconds: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8088
          initialDelaySeconds: 1
          timeoutSeconds: 1
