apiVersion: apps/v1
kind: Deployment
metadata:
  name: drycc-logger
  labels:
    heritage: drycc
  annotations:
    component.drycc.cc/version: {{ .Values.imageTag }}
spec:
  replicas: {{ .Values.replicas }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      app: drycc-logger
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app: drycc-logger
    spec:
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAffinityPreset.type "component" "" "extraMatchLabels" .Values.podAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.podAntiAffinityPreset.type "component" "" "extraMatchLabels" .Values.podAntiAffinityPreset.extraMatchLabels "topologyKey" "" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.nodeAffinityPreset.type "key" .Values.nodeAffinityPreset.key "values" .Values.nodeAffinityPreset.values ) | nindent 10 }}
      initContainers:
      - name: drycc-logger-init
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/python-dev:latest
        imagePullPolicy: {{.Values.imagePullPolicy}}
        args:
          - netcat
          - -v
          - -u
          - $(DRYCC_VALKEY_URL)
        env:
        {{- if (.Values.valkeyUrl) }}
        - name: DRYCC_VALKEY_URL
          valueFrom:
            secretKeyRef:
              name: logger-creds
              key: valkey-url
        {{- else if eq .Values.global.valkeyLocation "on-cluster"  }}
        - name: VALKEY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: valkey-creds
              key: password
        - name: DRYCC_VALKEY_URL
          value: "redis://:$(VALKEY_PASSWORD)@drycc-valkey.{{.Release.Namespace}}.svc.{{.Values.global.clusterDomain}}:16379/2"
        {{- end }}
      containers:
      - name: drycc-logger
        image: {{.Values.imageRegistry}}/{{.Values.imageOrg}}/logger:{{.Values.imageTag}}
        imagePullPolicy: {{.Values.imagePullPolicy}}
        {{- if .Values.diagnosticMode.enabled }}
        command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 10 }}
        args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 10 }}
        {{- end }}
        env:
        - name: STORAGE_ADAPTER
          value: valkey
        - name: DRYCC_LOGS_MAXIMUM_LINES
          value: "{{.Values.logsMaximumLines}}"
        - name: DRYCC_LOGS_MAXIMUM_TIMEOUT
          value: "{{.Values.logsMaximumTimeout}}"
        {{- if (.Values.valkeyUrl) }}
        - name: DRYCC_VALKEY_URL
          valueFrom:
            secretKeyRef:
              name: logger-creds
              key: valkey-url
        {{- else if eq .Values.global.valkeyLocation "on-cluster"  }}
        - name: VALKEY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: valkey-creds
              key: password
        - name: DRYCC_VALKEY_URL
          value: "redis://:$(VALKEY_PASSWORD)@drycc-valkey.{{.Release.Namespace}}.svc.{{.Values.global.clusterDomain}}:16379/2"
        {{- end }}
        ports:
        - containerPort: 8088
          name: http
        {{- if or (.Values.limitsCpu) (.Values.limitsMemory)}}
        resources:
          limits:
            {{- if (.Values.limitsCpu) }}
            cpu: {{.Values.limitsCpu}}
            {{- end}}
            {{- if (.Values.limitsMemory) }}
            memory: {{.Values.limitsMemory}}
            {{- end}}
        {{- end}}
        {{- if not .Values.diagnosticMode.enabled }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8088
          initialDelaySeconds: 1
          timeoutSeconds: 1
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8088
          initialDelaySeconds: 1
          timeoutSeconds: 1
        {{- end }}
